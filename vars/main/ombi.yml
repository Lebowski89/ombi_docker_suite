---

################################
# NETWORK
################################

ombi_network_default_bind:
  - name: '{{ ombi_network_backend }}'
ombi_network_mariadb_bind:
  - name: '{{ mariadb_network }}'
ombi_network_traefik_bind:
  - name: '{{ traefik_network }}'

ombi_networks: '{{ ombi_network_default_bind
                   + (ombi_network_mariadb_bind
                      if ombi_toggles_enable_mariadb
                      else [])
                   + (ombi_network_traefik_bind
                      if ombi_toggles_enable_traefik
                      else []) }}'

ombi_network_backend_is_enabled: '{{ (ombi_network_backend_driver is defined) and
                                     (ombi_network_backend_driver is not none) and
                                     (ombi_network_backend_driver | trim | length > 0) and
                                     (ombi_network_backend_subnet is defined) and
                                     (ombi_network_backend_subnet is not none) and
                                     (ombi_network_backend_subnet | trim | length > 0) }}'

################################
# LABELS
################################

ombi_labels: '{{ ombi_traefik_labels_default
                 | combine(ombi_traefik_labels_router)
                 | combine(ombi_traefik_labels_router_secure) }}'

################################
# TRAEFIK
################################

ombi_traefik_labels_default:
  traefik.enable: 'true'
  traefik.docker.network: '{{ traefik_network }}'

ombi_traefik_labels_router:
  traefik.http.routers.ombi-rtr.entrypoints: 'http'
  traefik.http.routers.ombi-rtr.rule: '{{ ombi_traefik_http_rule }}'
  traefik.http.routers.ombi-rtr.middlewares: '{{ ombi_traefik_http_middlewares_bind }}'
  traefik.http.routers.ombi-rtr.priority: '{{ ombi_traefik_http_priority }}'
  traefik.http.routers.ombi-rtr.service: 'ombi-rtr-svc'
  traefik.http.services.ombi-rtr-svc.loadbalancer.server.port: '{{ ombi_traefik_port }}'

ombi_traefik_labels_router_secure:
  traefik.http.routers.ombi-rtr-secure.entrypoints: 'https'
  traefik.http.routers.ombi-rtr-secure.rule: '{{ ombi_traefik_https_rule }}'
  traefik.http.routers.ombi-rtr-secure.middlewares: '{{ ombi_traefik_https_middlewares_bind }}'
  traefik.http.routers.ombi-rtr-secure.priority: '{{ ombi_traefik_https_priority }}'
  traefik.http.routers.ombi-rtr-secure.service: 'ombi-rtr-secure-svc'
  traefik.http.routers.ombi-rtr-secure.tls.certresolver: '{{ traefik_tls_certresolver }}'
  traefik.http.routers.ombi-rtr-secure.tls.options: '{{ traefik_tls_options }}'
  traefik.http.services.ombi-rtr-secure-svc.loadbalancer.server.port: '{{ ombi_traefik_port }}'

ombi_traefik_is_enabled: '{{ (ombi_traefik_domain is defined) and
                             (ombi_traefik_domain is not none) and
                             (ombi_traefik_domain | trim | length > 0) }}'

traefik_network_is_enabled: '{{ (traefik_network_driver is defined) and
                                (traefik_network_driver is not none) and
                                (traefik_network_driver | trim | length > 0) and
                                (traefik_network_subnet is defined) and
                                (traefik_network_subnet is not none) and
                                (traefik_network_subnet | trim | length > 0) }}'

ombi_traefik_http_middlewares_bind: '{{ ombi_traefik_http_middlewares
                                        + (",cloudflarewarp@docker"
                                           if (ombi_toggles_enable_cloudflarewarp)
                                           else "")
                                        + (",authelia@docker"
                                           if (ombi_toggles_enable_authelia_middleware)
                                           else "") }}'

ombi_traefik_https_middlewares_bind: '{{ ombi_traefik_https_middlewares
                                         + (",cloudflarewarp@docker"
                                            if (ombi_toggles_enable_cloudflarewarp)
                                            else "")
                                         + (",authelia@docker"
                                            if (ombi_toggles_enable_authelia_middleware)
                                            else "") }}'

################################
# CLOUDFLARE
################################

ombi_cloudflare_is_enabled: '{{ (ombi_cloudflare_api_token is defined) and
                                (ombi_cloudflare_api_token is not none) and
                                (ombi_cloudflare_api_token | trim | length > 0) }}'
